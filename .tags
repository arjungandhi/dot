!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/monkey/repos/github.com/arjungandhi/dot/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
<C-H>	config/nvim/init.vim	/^nnoremap <C-H> <C-W><C-H>$/;"	m
<C-J>	config/nvim/init.vim	/^nnoremap <C-J> <C-W><C-J>$/;"	m
<C-K>	config/nvim/init.vim	/^nnoremap <C-K> <C-W><C-K>$/;"	m
<C-L>	config/nvim/init.vim	/^nnoremap <C-L> <C-W><C-L>$/;"	m
<C-N>	config/nvim/init.vim	/^nnoremap <C-N> :bn<CR>$/;"	m
<C-P>	config/nvim/init.vim	/^nnoremap <C-P> :bp<CR>$/;"	m
<C-s>	config/nvim/init.vim	/^inoremap <C-s> <C-G>u<Esc>[s1z=`]a<C-G>u$/;"	m
<leader>$s	config/nvim/init.vim	/^nmap <leader>$s <C-w>s<C-w>j:terminal<CR>:set nonumber<CR><S-a>$/;"	m
<leader>$v	config/nvim/init.vim	/^nmap <leader>$v <C-w>v<C-w>l:terminal<CR>:set nonumber<CR><S-a>$/;"	m
<leader><leader>	config/nvim/init.vim	/^nmap <silent> <leader><leader> :noh<CR>$/;"	m
<leader>bd	config/nvim/init.vim	/^nmap <leader>bd :bufdo bd<CR>$/;"	m
<leader>e	config/nvim/init.vim	/^nmap <leader>e :NERDTreeToggle<CR>$/;"	m
<leader>ff	config/nvim/init.vim	/^nmap <leader>ff :Files<CR>$/;"	m
<leader>fg	config/nvim/init.vim	/^nmap <leader>fg :ProjectFiles<CR>$/;"	m
<leader>fs	config/nvim/init.vim	/^nmap <leader>fs :SNIPPETS<CR>$/;"	m
<leader>ft	config/nvim/init.vim	/^nmap <leader>ft :Tags<CR>$/;"	m
<leader>n	config/nvim/init.vim	/^nmap <leader>n :cc<CR>$/;"	m
<leader>r	config/nvim/init.vim	/^nmap <leader>r :so ~\/.config\/nvim\/init.vim<CR>$/;"	m
<leader>s	config/nvim/init.vim	/^nmap <leader>s :setlocal spell!<CR>$/;"	m
<leader>t	config/nvim/init.vim	/^nmap <leader>t :call TrimWhitespace()<CR>$/;"	m
About	snippets/md/README.md	/^# About$/;"	c
Description	services/watch-dot.service	/^Description=Watches the dot file repo for changes and commits them$/;"	k	section:Unit
Description	services/watch-jupyter-backup.service	/^Description=Watches the jupyter-backup file repo for changes and commits them$/;"	k	section:Unit
Description	services/watch-monkey.service	/^Description=Watches the monkey file repo for changes and commits them$/;"	k	section:Unit
Description	services/watch-site.service	/^Description=Watches the arjungandhi.com file repo for changes and commits them$/;"	k	section:Unit
Dot	README.md	/^# Dot$/;"	c
EnvironmentFile	services/watch-dot.service	/^EnvironmentFile=\/opt\/monkey\/services\/env$/;"	k	section:Service
EnvironmentFile	services/watch-jupyter-backup.service	/^EnvironmentFile=\/opt\/monkey\/services\/env$/;"	k	section:Service
EnvironmentFile	services/watch-monkey.service	/^EnvironmentFile=\/opt\/monkey\/services\/env$/;"	k	section:Service
EnvironmentFile	services/watch-site.service	/^EnvironmentFile=\/opt\/monkey\/services\/env$/;"	k	section:Service
ExecStart	services/watch-dot.service	/^ExecStart=$HOME\/repos\/github.com\/arjungandhi\/dot\/scripts\/autocommit $HOME\/repos\/github.c/;"	k	section:Service
ExecStart	services/watch-jupyter-backup.service	/^ExecStart=$HOME\/repos\/github.com\/arjungandhi\/dot\/scripts\/autocommit $HOME\/repos\/github.c/;"	k	section:Service
ExecStart	services/watch-monkey.service	/^ExecStart=$HOME\/repos\/github.com\/arjungandhi\/dot\/scripts\/autocommit $HOME\/repos\/github.c/;"	k	section:Service
ExecStart	services/watch-site.service	/^ExecStart=$HOME\/repos\/github.com\/arjungandhi\/dot\/scripts\/autocommit $HOME\/repos\/github.c/;"	k	section:Service
HiLink	config/nvim/syntax/proto.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	config/nvim/syntax/proto.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
Ingredients	snippets/zet/recipe.md	/^## Ingredients$/;"	s	chapter:{{.title}}
Install	services/watch-dot.service	/^[Install]$/;"	s
Install	services/watch-jupyter-backup.service	/^[Install]$/;"	s
Install	services/watch-monkey.service	/^[Install]$/;"	s
Install	services/watch-site.service	/^[Install]$/;"	s
ProjectFiles	config/nvim/init.vim	/^command! ProjectFiles execute s:find_files()$/;"	c
Restart	services/watch-dot.service	/^Restart=always$/;"	k	section:Service
Restart	services/watch-jupyter-backup.service	/^Restart=always$/;"	k	section:Service
Restart	services/watch-monkey.service	/^Restart=always$/;"	k	section:Service
Restart	services/watch-site.service	/^Restart=always$/;"	k	section:Service
RestartSec	services/watch-dot.service	/^RestartSec=1$/;"	k	section:Service
RestartSec	services/watch-jupyter-backup.service	/^RestartSec=1$/;"	k	section:Service
RestartSec	services/watch-monkey.service	/^RestartSec=1$/;"	k	section:Service
RestartSec	services/watch-site.service	/^RestartSec=1$/;"	k	section:Service
SNIPPETS	config/nvim/init.vim	/^command! SNIPPETS call fzf#run(fzf#wrap({'source': 'snip list', 'sink': '.!snip'}))$/;"	c
Service	services/watch-dot.service	/^[Service]$/;"	s
Service	services/watch-jupyter-backup.service	/^[Service]$/;"	s
Service	services/watch-monkey.service	/^[Service]$/;"	s
Service	services/watch-site.service	/^[Service]$/;"	s
Steps	snippets/zet/recipe.md	/^## Steps$/;"	s	chapter:{{.title}}
TrimWhitespace	config/nvim/init.vim	/^function! TrimWhitespace()$/;"	f
Type	services/watch-dot.service	/^Type=simple$/;"	k	section:Service
Type	services/watch-jupyter-backup.service	/^Type=simple$/;"	k	section:Service
Type	services/watch-monkey.service	/^Type=simple$/;"	k	section:Service
Type	services/watch-site.service	/^Type=simple$/;"	k	section:Service
Unit	services/watch-dot.service	/^[Unit]$/;"	s
Unit	services/watch-jupyter-backup.service	/^[Unit]$/;"	s
Unit	services/watch-monkey.service	/^[Unit]$/;"	s
Unit	services/watch-site.service	/^[Unit]$/;"	s
WantedBy	services/watch-dot.service	/^WantedBy=default.target$/;"	k	section:Install
WantedBy	services/watch-jupyter-backup.service	/^WantedBy=default.target$/;"	k	section:Install
WantedBy	services/watch-monkey.service	/^WantedBy=default.target$/;"	k	section:Install
WantedBy	services/watch-site.service	/^WantedBy=default.target$/;"	k	section:Install
_mage_completions	functions/mage-completion.sh	/^_mage_completions()$/;"	f
any	snippets/python/tox.ini	/^allow-star-arg-any = true$/;"	k	section:flake8
autocommit	scripts/autocommit	/^autocommit() {$/;"	f
b:current_syntax	config/nvim/syntax/proto.vim	/^let b:current_syntax = "proto"/;"	v
backend	config/picom/picom.conf	/^backend = "glx";$/;"	k
changed	scripts/changed	/^changed () {$/;"	f
check_khal	scripts/kal	/^check_khal() {$/;"	f
clone	scripts/clone	/^clone() {$/;"	f
corners	config/picom/picom.conf	/^detect-rounded-corners = true;$/;"	k
damage	config/picom/picom.conf	/^use-damage = true$/;"	k
did_proto_syn_inits	config/nvim/syntax/proto.vim	/^    let did_proto_syn_inits = 1$/;"	v
exclude	config/picom/picom.conf	/^blur-background-exclude = [$/;"	k
exclude	config/picom/picom.conf	/^shadow-exclude = [$/;"	k
exclude	snippets/python/tox.ini	/^exclude =$/;"	k	section:flake8
fading	config/picom/picom.conf	/^fading = true$/;"	k
filetype	config/nvim/ftdectect/proto.vim	/^augroup filetype$/;"	a
flake8	snippets/python/tox.ini	/^[flake8]$/;"	s
focused	config/picom/picom.conf	/^mark-ovredir-focused = true;$/;"	k
focused	config/picom/picom.conf	/^mark-wmwin-focused = true;$/;"	k
g:context_nvim_no_redraw	config/nvim/init.vim	/^let g:context_nvim_no_redraw = 1$/;"	v
g:copilot_node_command	config/nvim/init.vim	/^let g:copilot_node_command = '~\/.nodenv\/versions\/16.17.0\/bin\/node'$/;"	v
g:cursorhold_updatetime	config/nvim/init.vim	/^let g:cursorhold_updatetime = 100$/;"	v
g:fzf_layout	config/nvim/init.vim	/^let g:fzf_layout = { 'down': '40%' }$/;"	v
g:gutentags_ctags_tagfile	config/nvim/init.vim	/^let g:gutentags_ctags_tagfile = '.tags'$/;"	v
g:gutentags_file_list_command	config/nvim/init.vim	/^    let g:gutentags_file_list_command = 'rg --files'$/;"	v
g:pydocstring_doq_path	config/nvim/init.vim	/^let g:pydocstring_doq_path = '\/home\/arjun\/.local\/bin\/doq'$/;"	v
g:python3_host_prog	config/nvim/init.vim	/^let g:python3_host_prog = '\/usr\/bin\/python'$/;"	v
get_dockerctx	config/i3status/wrapper.py	/^def get_dockerctx():$/;"	f
get_kubectx	config/i3status/wrapper.py	/^def get_kubectx():$/;"	f
get_kubens	config/i3status/wrapper.py	/^def get_kubens():$/;"	f
haschanged	scripts/haschanged	/^haschanged () {$/;"	f
hline	scripts/hline	/^hline() {$/;"	f
ignore	snippets/python/tox.ini	/^ignore = $/;"	k	section:flake8
j	config/i3status/wrapper.py	/^        j = json.loads(line)$/;"	v
kern	config/picom/picom.conf	/^blur-kern = "3x3box";$/;"	k
leader	config/picom/picom.conf	/^detect-client-leader = true$/;"	k
length	snippets/python/tox.ini	/^max-line-length = 88$/;"	k	section:flake8
level	config/picom/picom.conf	/^log-level = "warn";$/;"	k
license	scripts/license	/^license() {$/;"	f
line	config/i3status/wrapper.py	/^            line, prefix = line[1:], ","$/;"	v
line	config/i3status/wrapper.py	/^        line, prefix = read_line(), ""$/;"	v
list	scripts/clone	/^list() {$/;"	f
list	scripts/kal	/^list() {$/;"	f
list	scripts/license	/^list() {$/;"	f
list	scripts/post	/^list() {$/;"	f
list	scripts/snip	/^list() {$/;"	f
mapleader	config/nvim/init.vim	/^let mapleader=","$/;"	v
names	snippets/python/tox.ini	/^application-import-names = flake8$/;"	k	section:flake8
onchange	scripts/onchange	/^onchange () {$/;"	f
opacity	config/picom/picom.conf	/^detect-client-opacity = true;$/;"	k
opacity	config/picom/picom.conf	/^frame-opacity = 1.0$/;"	k
opacity	config/picom/picom.conf	/^inactive-opacity = 1$/;"	k
override	config/picom/picom.conf	/^inactive-opacity-override = false;$/;"	k
post	scripts/post	/^post() {$/;"	f
prefix	config/i3status/wrapper.py	/^            line, prefix = line[1:], ","$/;"	v
prefix	config/i3status/wrapper.py	/^        line, prefix = read_line(), ""$/;"	v
print_line	config/i3status/wrapper.py	/^def print_line(message):$/;"	f
print_x	scripts/hline	/^print_x() {$/;"	f
radius	config/picom/picom.conf	/^shadow-radius = 7;$/;"	k
rate	config/picom/picom.conf	/^refresh-rate = 0$/;"	k
read_line	config/i3status/wrapper.py	/^def read_line():$/;"	f
repo-list	functions/workon.sh	/^    repo-list() {$/;"	f
return	snippets/python/tox.ini	/^mypy-init-return = true$/;"	k	section:flake8
returning	snippets/python/tox.ini	/^suppress-none-returning = true$/;"	k	section:flake8
rule	config/picom/picom.conf	/^opacity-rule = [$/;"	k
s:find_files	config/nvim/init.vim	/^function! s:find_files()$/;"	f
shadow	config/picom/picom.conf	/^shadow = false$/;"	k
snip	scripts/snip	/^snip() {$/;"	f
step	config/picom/picom.conf	/^fade-in-step = 0.5;$/;"	k
step	config/picom/picom.conf	/^fade-out-step = 0.5;$/;"	k
style	snippets/python/tox.ini	/^import-order-style = google$/;"	k	section:flake8
today	scripts/kal	/^today() {$/;"	f
transient	config/picom/picom.conf	/^detect-transient = true$/;"	k
usage	scripts/clone	/^usage() {$/;"	f
usage	scripts/kal	/^usage() {$/;"	f
usage	scripts/license	/^usage() {$/;"	f
usage	scripts/post	/^usage() {$/;"	f
usage	scripts/prs	/^usage() {$/;"	f
usage	scripts/snip	/^usage() {$/;"	f
vsync	config/picom/picom.conf	/^vsync = true$/;"	k
workon	functions/workon.sh	/^workon() {$/;"	f
x	config/picom/picom.conf	/^shadow-offset-x = -7;$/;"	k
y	config/picom/picom.conf	/^shadow-offset-y = -7;$/;"	k
{{.title}}	snippets/zet/note.md	/^# {{.title}}$/;"	c
{{.title}}	snippets/zet/recipe.md	/^# {{.title}}$/;"	c
{{.title}}	snippets/zet/url.md	/^# {{.title}}$/;"	c
